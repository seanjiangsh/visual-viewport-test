(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))o(e);new MutationObserver(e=>{for(const n of e)if(n.type==="childList")for(const s of n.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&o(s)}).observe(document,{childList:!0,subtree:!0});function d(e){const n={};return e.integrity&&(n.integrity=e.integrity),e.referrerPolicy&&(n.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?n.credentials="include":e.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function o(e){if(e.ep)return;e.ep=!0;const n=d(e);fetch(e.href,n)}})();const{visualViewport:t}=window,u=10,l=t==null?void 0:t.height;function c(){const i=document.querySelector("#output");if(!i)return;if(t){const e=t==null?void 0:t.height;if(e===void 0||l===void 0)return;const n=document.querySelector("input"),s=document.activeElement===n,f=e<l,h=s&&f;i.innerHTML=`
    <p>Virtual keyboard opened: ${h?"Yes":"No"}</p>
    `,i.innerHTML+=`<p>Visual viewport size: W: ${t.width}, H: ${e}</p>`,i.innerHTML+=`
    <p>Window inner size: W:${window.innerWidth}, H:${window.innerHeight}</p>
  `}else i.innerHTML="<p>Visual viewport API is not supported</p>";const r=(t==null?void 0:t.width)||window.innerWidth,d=(t==null?void 0:t.height)||window.innerHeight,o=document.querySelector("#app");o&&(o.style.width=`${Math.round(r)-u*2}px`,o.style.height=`${Math.round(d)-u*2}px`),p()}function p(){scrollTo(0,0)}t?t.addEventListener("resize",c):window.addEventListener("resize",c);window.addEventListener("load",c);window.addEventListener("scroll",p);
