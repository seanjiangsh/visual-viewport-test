(function(){const i=document.createElement("link").relList;if(i&&i.supports&&i.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))o(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const d of t.addedNodes)d.tagName==="LINK"&&d.rel==="modulepreload"&&o(d)}).observe(document,{childList:!0,subtree:!0});function r(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function o(e){if(e.ep)return;e.ep=!0;const t=r(e);fetch(e.href,t)}})();const{visualViewport:s}=window,u=20;function c(){const n=document.querySelector("#output");if(!n)return;let i,r;if(n.innerHTML=`
  <p>Window inner size: W: ${window.innerWidth}, H: ${window.innerHeight}</p>
`,s){i=Math.round(s.width),r=Math.round(s.height),n.innerHTML+=`<p>Visual viewport size: W: ${i}, H: ${r}</p>`;const e=r<window.innerHeight;n.innerHTML+=`
    <p>Virtual keyboard opened: ${e?"Yes":"No"}</p>
  `}else i=window.innerWidth,r=window.innerHeight,n.innerHTML="<p>Visual viewport API is not supported</p>";const o=document.querySelector("#app");o&&(o.style.width=`${i-u*2}px`,o.style.height=`${r-u*2}px`),l()}function l(){scrollTo(0,0)}s?s.addEventListener("resize",c):window.addEventListener("resize",c);window.addEventListener("load",c);window.addEventListener("scroll",l);
