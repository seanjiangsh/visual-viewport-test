(function(){const i=document.createElement("link").relList;if(i&&i.supports&&i.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))n(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const d of t.addedNodes)d.tagName==="LINK"&&d.rel==="modulepreload"&&n(d)}).observe(document,{childList:!0,subtree:!0});function r(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function n(e){if(e.ep)return;e.ep=!0;const t=r(e);fetch(e.href,t)}})();const{visualViewport:s}=window;function c(){const o=document.querySelector("#output");if(!o)return;let i,r;s?(i=s.width,r=s.height,o.innerHTML="<p>Visual viewport size:</p>"):(i=window.innerWidth,r=window.innerHeight,o.innerHTML="<p>Visual viewport API is not supported. Using window inner size.</p>"),o.innerHTML+=`
    <p>Width: ${i}</p>
    <p>Height: ${r}</p>
  `;const n=document.body.style;n.width=`${i}px`,n.height=`${r}px`,l()}function l(){window.scrollTo(0,0)}s?s.addEventListener("resize",c):window.addEventListener("resize",c);window.addEventListener("load",c);window.addEventListener("scroll",l);
